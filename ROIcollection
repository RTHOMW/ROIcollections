{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 87,
   "id": "5c0911c9",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "    CollectionList TokenList  Tokenperday\n",
      "0          turtles     TRTLS         5.00\n",
      "1           degods      DUST         7.50\n",
      "2  boryoku_dragonz      BOKU         7.00\n",
      "3   taiyo_robotics     SCRAP         8.50\n",
      "4  blocksmith_labs    $FORGE        10.00\n",
      "turtles TRTLS 5.0\n",
      "next\n",
      "https://api-mainnet.magiceden.dev/v2/collections/turtles/stats/\n",
      "degods DUST 7.5\n",
      "next\n",
      "https://api-mainnet.magiceden.dev/v2/collections/degods/stats/\n",
      "boryoku_dragonz BOKU 7.0\n",
      "next\n",
      "https://api-mainnet.magiceden.dev/v2/collections/boryoku_dragonz/stats/\n",
      "taiyo_robotics SCRAP 8.5\n",
      "next\n",
      "https://api-mainnet.magiceden.dev/v2/collections/taiyo_robotics/stats/\n",
      "blocksmith_labs $FORGE 10.0\n",
      "next\n",
      "https://api-mainnet.magiceden.dev/v2/collections/blocksmith_labs/stats/\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "\n",
    "df = pd.read_excel (r'C:\\Users\\kkanoee\\Documents\\Python Scripts\\TablePython.xlsx') #place \"r\" before the path string to address special character, such as '\\'. Don't forget to put the file name at the end of the path + '.xlsx'\n",
    "print (df)\n",
    "df.iat[0,1]\n",
    "\n",
    "for ind in df.index:\n",
    "    print(df['CollectionList'][ind], df['TokenList'][ind], df['Tokenperday'][ind])\n",
    "    print('next')\n",
    "    \n",
    "    apicall='https://api-mainnet.magiceden.dev/v2/collections/'+df['CollectionList'][ind]+'/stats/'\n",
    "    print(apicall)\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 88,
   "id": "6174db1b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "turtles TRTLS 5.0\n",
      "next\n",
      "degods DUST 7.5\n",
      "next\n",
      "boryoku_dragonz BOKU 7.0\n",
      "next\n",
      "taiyo_robotics SCRAP 8.5\n",
      "next\n",
      "blocksmith_labs $FORGE 10.0\n",
      "next\n"
     ]
    }
   ],
   "source": [
    "from requests import Request, Session\n",
    "from requests.exceptions import ConnectionError, Timeout, TooManyRedirects\n",
    "import json\n",
    "\n",
    "\n",
    "column_names = [\"symbol\", \"floorPrice\", \"listedCount\", \"avgPrice24hr\", \"volumeAll\"]\n",
    "dfAfp = pd.DataFrame(columns = column_names)\n",
    "\n",
    "column_token = ['timestamp', 'error_code', 'error_message','elapsed', 'credit_count', 'notice','id', 'name', 'symbol','slug', 'num_market_pairs', 'date_added','tags', 'max_supply', 'circulating_supply','total_supply', 'id', 'name','symbol', 'platform_slug', 'platform_token_address','is_active', 'cmc_rank', 'is_fiat','self_reported_circulating_supply', 'self_reported_market_cap', 'tbl_ratio','last_updated', 'usd_price', 'usd_volume_24h','usd_volume_change_24h', 'usd_percent_change_1h', 'usd_percent_change_24h','usd_percent_change_7d', 'usd_percent_change_30d', 'usd_percent_change_60d','usd_percent_change_90d', 'usd_marketcap', 'usd_marketcap_dominance','usd_full_diluted_marketcap', 'usd_tvl', 'usd_last_updated', 'token_per_day', 'usd_per_day']\n",
    "dfA = pd.DataFrame(columns = column_token)\n",
    "dfA = dfA.reset_index(drop=True)\n",
    "\n",
    "for ind in df.index:\n",
    "    print(df['CollectionList'][ind], df['TokenList'][ind], df['Tokenperday'][ind])\n",
    "    print('next')\n",
    "\n",
    "    #Collection -------------------------------------------------------------\n",
    "    \n",
    "    apicall='https://api-mainnet.magiceden.dev/v2/collections/'+df['CollectionList'][ind]+'/stats/'\n",
    "    \n",
    "    url = apicall\n",
    "    headers = {\n",
    "      'Accepts': 'application/json',\n",
    "      'X-CMC_PRO_API_KEY': '0fbe4952-0675-4f13-8274-fb02dbd99dbf',\n",
    "    }\n",
    "\n",
    "    session = Session()\n",
    "    session.headers.update(headers)\n",
    "\n",
    "    try:\n",
    "      response = session.get(url)\n",
    "      FloorPrice = json.loads(response.text)\n",
    "      #print(FloorPrice)\n",
    "    except (ConnectionError, Timeout, TooManyRedirects) as e:\n",
    "      print(e)\n",
    "\n",
    "    df1fp = pd.json_normalize(FloorPrice)\n",
    "    dfAfp = pd.concat([dfAfp, df1fp], ignore_index=True, sort=False)\n",
    "    \n",
    "    #Tokens -----------------------------------------------------------------\n",
    "    \n",
    "    url = 'https://pro-api.coinmarketcap.com/v1/cryptocurrency/quotes/latest'\n",
    "    parameters = {\n",
    "      'convert':'USD',\n",
    "    'symbol':df['TokenList'][ind]\n",
    "    }\n",
    "    headers = {\n",
    "      'Accepts': 'application/json',\n",
    "      'X-CMC_PRO_API_KEY': '0fbe4952-0675-4f13-8274-fb02dbd99dbf',\n",
    "    }\n",
    "\n",
    "    session = Session()\n",
    "    session.headers.update(headers)\n",
    "\n",
    "    try:\n",
    "      response = session.get(url, params=parameters)\n",
    "      Token = json.loads(response.text)\n",
    "      #print(Token)\n",
    "    except (ConnectionError, Timeout, TooManyRedirects) as e:\n",
    "      print(e)\n",
    "    \n",
    "    df1 = pd.json_normalize(Token)\n",
    "    df1.columns = ['timestamp', 'error_code', 'error_message','elapsed', 'credit_count', 'notice','id', 'name', 'symbol','slug', 'num_market_pairs', 'date_added','tags', 'max_supply', 'circulating_supply','total_supply', 'id', 'name','symbol', 'platform_slug', 'platform_token_address','is_active', 'cmc_rank', 'is_fiat','self_reported_circulating_supply', 'self_reported_market_cap', 'tbl_ratio','last_updated', 'usd_price', 'usd_volume_24h','usd_volume_change_24h', 'usd_percent_change_1h', 'usd_percent_change_24h','usd_percent_change_7d', 'usd_percent_change_30d', 'usd_percent_change_60d','usd_percent_change_90d', 'usd_marketcap', 'usd_marketcap_dominance','usd_full_diluted_marketcap', 'usd_tvl', 'usd_last_updated']\n",
    "    df1.loc[0,'token_per_day']=df['Tokenperday'][ind]\n",
    "    df1['usd_per_day']=df1['usd_price']*df1['token_per_day']\n",
    "    \n",
    "    df1.reset_index(inplace=True, drop=True)\n",
    "    dfA.reset_index(inplace=True, drop=True)\n",
    "    dfA = pd.concat([dfA, df1], ignore_index=True, sort=False)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "id": "f2cd24a6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>timestamp</th>\n",
       "      <th>error_code</th>\n",
       "      <th>error_message</th>\n",
       "      <th>elapsed</th>\n",
       "      <th>credit_count</th>\n",
       "      <th>notice</th>\n",
       "      <th>id</th>\n",
       "      <th>name</th>\n",
       "      <th>symbol</th>\n",
       "      <th>slug</th>\n",
       "      <th>num_market_pairs</th>\n",
       "      <th>date_added</th>\n",
       "      <th>tags</th>\n",
       "      <th>max_supply</th>\n",
       "      <th>circulating_supply</th>\n",
       "      <th>total_supply</th>\n",
       "      <th>id</th>\n",
       "      <th>name</th>\n",
       "      <th>symbol</th>\n",
       "      <th>platform_slug</th>\n",
       "      <th>platform_token_address</th>\n",
       "      <th>is_active</th>\n",
       "      <th>cmc_rank</th>\n",
       "      <th>is_fiat</th>\n",
       "      <th>self_reported_circulating_supply</th>\n",
       "      <th>self_reported_market_cap</th>\n",
       "      <th>tbl_ratio</th>\n",
       "      <th>last_updated</th>\n",
       "      <th>usd_price</th>\n",
       "      <th>usd_volume_24h</th>\n",
       "      <th>usd_volume_change_24h</th>\n",
       "      <th>usd_percent_change_1h</th>\n",
       "      <th>usd_percent_change_24h</th>\n",
       "      <th>usd_percent_change_7d</th>\n",
       "      <th>usd_percent_change_30d</th>\n",
       "      <th>usd_percent_change_60d</th>\n",
       "      <th>usd_percent_change_90d</th>\n",
       "      <th>usd_marketcap</th>\n",
       "      <th>usd_marketcap_dominance</th>\n",
       "      <th>usd_full_diluted_marketcap</th>\n",
       "      <th>usd_tvl</th>\n",
       "      <th>usd_last_updated</th>\n",
       "      <th>token_per_day</th>\n",
       "      <th>usd_per_day</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2022-10-13T13:20:49.191Z</td>\n",
       "      <td>0</td>\n",
       "      <td>None</td>\n",
       "      <td>1972</td>\n",
       "      <td>1</td>\n",
       "      <td>None</td>\n",
       "      <td>15330</td>\n",
       "      <td>Turtles Token</td>\n",
       "      <td>TRTLS</td>\n",
       "      <td>turtles-token</td>\n",
       "      <td>3</td>\n",
       "      <td>2021-11-30T03:49:23.000Z</td>\n",
       "      <td>[collectibles-nfts, gaming, solana-ecosystem]</td>\n",
       "      <td>30000000</td>\n",
       "      <td>0</td>\n",
       "      <td>30000000</td>\n",
       "      <td>5426</td>\n",
       "      <td>Solana</td>\n",
       "      <td>SOL</td>\n",
       "      <td>solana</td>\n",
       "      <td>q4bpaRKw3fJB1AJBeeBaKv3TjYzWsmntLgnSB275YUb</td>\n",
       "      <td>1</td>\n",
       "      <td>5609</td>\n",
       "      <td>0</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "      <td>2022-10-13T13:19:00.000Z</td>\n",
       "      <td>0.08</td>\n",
       "      <td>2527.84</td>\n",
       "      <td>-57.76</td>\n",
       "      <td>-2.08</td>\n",
       "      <td>-10.21</td>\n",
       "      <td>-20.63</td>\n",
       "      <td>-13.54</td>\n",
       "      <td>-36.68</td>\n",
       "      <td>-17.65</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2462625.92</td>\n",
       "      <td>None</td>\n",
       "      <td>2022-10-13T13:19:00.000Z</td>\n",
       "      <td>5.00</td>\n",
       "      <td>0.41</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2022-10-13T13:20:49.808Z</td>\n",
       "      <td>0</td>\n",
       "      <td>None</td>\n",
       "      <td>36</td>\n",
       "      <td>1</td>\n",
       "      <td>None</td>\n",
       "      <td>18802</td>\n",
       "      <td>DUST Protocol</td>\n",
       "      <td>DUST</td>\n",
       "      <td>dust-protocol</td>\n",
       "      <td>12</td>\n",
       "      <td>2022-03-14T13:00:32.000Z</td>\n",
       "      <td>[solana-ecosystem]</td>\n",
       "      <td>None</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>5426</td>\n",
       "      <td>Solana</td>\n",
       "      <td>SOL</td>\n",
       "      <td>solana</td>\n",
       "      <td>DUSTawucrTsGU8hcqRdHDCbuYhCPADMLM2VcCb8VnFnQ</td>\n",
       "      <td>1</td>\n",
       "      <td>2661</td>\n",
       "      <td>0</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "      <td>2022-10-13T13:19:00.000Z</td>\n",
       "      <td>1.05</td>\n",
       "      <td>16333836.08</td>\n",
       "      <td>941.26</td>\n",
       "      <td>-2.35</td>\n",
       "      <td>-11.44</td>\n",
       "      <td>-33.23</td>\n",
       "      <td>-21.68</td>\n",
       "      <td>-41.11</td>\n",
       "      <td>0.56</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>None</td>\n",
       "      <td>2022-10-13T13:19:00.000Z</td>\n",
       "      <td>7.50</td>\n",
       "      <td>7.88</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2022-10-13T13:20:50.154Z</td>\n",
       "      <td>0</td>\n",
       "      <td>None</td>\n",
       "      <td>44</td>\n",
       "      <td>1</td>\n",
       "      <td>None</td>\n",
       "      <td>15097</td>\n",
       "      <td>Boryoku Dragonz</td>\n",
       "      <td>BOKU</td>\n",
       "      <td>boku</td>\n",
       "      <td>1</td>\n",
       "      <td>2021-11-24T04:34:29.000Z</td>\n",
       "      <td>[]</td>\n",
       "      <td>42069069</td>\n",
       "      <td>0</td>\n",
       "      <td>42069069</td>\n",
       "      <td>5426</td>\n",
       "      <td>Solana</td>\n",
       "      <td>SOL</td>\n",
       "      <td>solana</td>\n",
       "      <td>CN7qFa5iYkHz99PTctvT4xXUHnxwjQ5MHxCuTJtPN5uS</td>\n",
       "      <td>1</td>\n",
       "      <td>6671</td>\n",
       "      <td>0</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "      <td>2022-10-13T13:19:00.000Z</td>\n",
       "      <td>0.08</td>\n",
       "      <td>219.18</td>\n",
       "      <td>0.73</td>\n",
       "      <td>-0.08</td>\n",
       "      <td>-2.06</td>\n",
       "      <td>-7.28</td>\n",
       "      <td>-43.63</td>\n",
       "      <td>-32.98</td>\n",
       "      <td>-56.26</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3554147.42</td>\n",
       "      <td>None</td>\n",
       "      <td>2022-10-13T13:19:00.000Z</td>\n",
       "      <td>7.00</td>\n",
       "      <td>0.59</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2022-10-13T13:20:50.494Z</td>\n",
       "      <td>0</td>\n",
       "      <td>None</td>\n",
       "      <td>41</td>\n",
       "      <td>1</td>\n",
       "      <td>None</td>\n",
       "      <td>17656</td>\n",
       "      <td>Scrap</td>\n",
       "      <td>SCRAP</td>\n",
       "      <td>scrap</td>\n",
       "      <td>4</td>\n",
       "      <td>2022-01-26T09:21:40.000Z</td>\n",
       "      <td>[solana-ecosystem]</td>\n",
       "      <td>None</td>\n",
       "      <td>0</td>\n",
       "      <td>5000000</td>\n",
       "      <td>5426</td>\n",
       "      <td>Solana</td>\n",
       "      <td>SOL</td>\n",
       "      <td>solana</td>\n",
       "      <td>6naWDMGNWwqffJnnXFLBCLaYu1y5U9Rohe5wwJPHvf1p</td>\n",
       "      <td>1</td>\n",
       "      <td>3095</td>\n",
       "      <td>0</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "      <td>2022-10-13T13:19:00.000Z</td>\n",
       "      <td>0.70</td>\n",
       "      <td>386735.84</td>\n",
       "      <td>20.24</td>\n",
       "      <td>13.38</td>\n",
       "      <td>-0.30</td>\n",
       "      <td>-2.40</td>\n",
       "      <td>-38.73</td>\n",
       "      <td>99.22</td>\n",
       "      <td>4.87</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3523120.37</td>\n",
       "      <td>None</td>\n",
       "      <td>2022-10-13T13:19:00.000Z</td>\n",
       "      <td>8.50</td>\n",
       "      <td>5.99</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2022-10-13T13:20:50.915Z</td>\n",
       "      <td>0</td>\n",
       "      <td>None</td>\n",
       "      <td>61</td>\n",
       "      <td>1</td>\n",
       "      <td>None</td>\n",
       "      <td>19976</td>\n",
       "      <td>Blocksmith Labs Forge</td>\n",
       "      <td>$FORGE</td>\n",
       "      <td>blocksmith-labs-forge</td>\n",
       "      <td>4</td>\n",
       "      <td>2022-05-05T09:27:06.000Z</td>\n",
       "      <td>[solana-ecosystem]</td>\n",
       "      <td>44000000</td>\n",
       "      <td>0</td>\n",
       "      <td>9999992.16</td>\n",
       "      <td>5426</td>\n",
       "      <td>Solana</td>\n",
       "      <td>SOL</td>\n",
       "      <td>solana</td>\n",
       "      <td>FoRGERiW7odcCBGU1bztZi16osPBHjxharvDathL5eds</td>\n",
       "      <td>1</td>\n",
       "      <td>3639</td>\n",
       "      <td>0</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "      <td>2022-10-13T13:19:00.000Z</td>\n",
       "      <td>0.35</td>\n",
       "      <td>109321.39</td>\n",
       "      <td>60.80</td>\n",
       "      <td>-21.37</td>\n",
       "      <td>-1.40</td>\n",
       "      <td>-30.92</td>\n",
       "      <td>-45.63</td>\n",
       "      <td>-59.08</td>\n",
       "      <td>-59.08</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>15534428.67</td>\n",
       "      <td>None</td>\n",
       "      <td>2022-10-13T13:19:00.000Z</td>\n",
       "      <td>10.00</td>\n",
       "      <td>3.53</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                  timestamp error_code error_message elapsed credit_count  \\\n",
       "0  2022-10-13T13:20:49.191Z          0          None    1972            1   \n",
       "1  2022-10-13T13:20:49.808Z          0          None      36            1   \n",
       "2  2022-10-13T13:20:50.154Z          0          None      44            1   \n",
       "3  2022-10-13T13:20:50.494Z          0          None      41            1   \n",
       "4  2022-10-13T13:20:50.915Z          0          None      61            1   \n",
       "\n",
       "  notice     id                   name  symbol                   slug  \\\n",
       "0   None  15330          Turtles Token   TRTLS          turtles-token   \n",
       "1   None  18802          DUST Protocol    DUST          dust-protocol   \n",
       "2   None  15097        Boryoku Dragonz    BOKU                   boku   \n",
       "3   None  17656                  Scrap   SCRAP                  scrap   \n",
       "4   None  19976  Blocksmith Labs Forge  $FORGE  blocksmith-labs-forge   \n",
       "\n",
       "  num_market_pairs                date_added  \\\n",
       "0                3  2021-11-30T03:49:23.000Z   \n",
       "1               12  2022-03-14T13:00:32.000Z   \n",
       "2                1  2021-11-24T04:34:29.000Z   \n",
       "3                4  2022-01-26T09:21:40.000Z   \n",
       "4                4  2022-05-05T09:27:06.000Z   \n",
       "\n",
       "                                            tags max_supply  \\\n",
       "0  [collectibles-nfts, gaming, solana-ecosystem]   30000000   \n",
       "1                             [solana-ecosystem]       None   \n",
       "2                                             []   42069069   \n",
       "3                             [solana-ecosystem]       None   \n",
       "4                             [solana-ecosystem]   44000000   \n",
       "\n",
       "  circulating_supply total_supply    id    name symbol platform_slug  \\\n",
       "0                  0     30000000  5426  Solana    SOL        solana   \n",
       "1                  0            0  5426  Solana    SOL        solana   \n",
       "2                  0     42069069  5426  Solana    SOL        solana   \n",
       "3                  0      5000000  5426  Solana    SOL        solana   \n",
       "4                  0   9999992.16  5426  Solana    SOL        solana   \n",
       "\n",
       "                         platform_token_address is_active cmc_rank is_fiat  \\\n",
       "0   q4bpaRKw3fJB1AJBeeBaKv3TjYzWsmntLgnSB275YUb         1     5609       0   \n",
       "1  DUSTawucrTsGU8hcqRdHDCbuYhCPADMLM2VcCb8VnFnQ         1     2661       0   \n",
       "2  CN7qFa5iYkHz99PTctvT4xXUHnxwjQ5MHxCuTJtPN5uS         1     6671       0   \n",
       "3  6naWDMGNWwqffJnnXFLBCLaYu1y5U9Rohe5wwJPHvf1p         1     3095       0   \n",
       "4  FoRGERiW7odcCBGU1bztZi16osPBHjxharvDathL5eds         1     3639       0   \n",
       "\n",
       "  self_reported_circulating_supply self_reported_market_cap tbl_ratio  \\\n",
       "0                             None                     None      None   \n",
       "1                             None                     None      None   \n",
       "2                             None                     None      None   \n",
       "3                             None                     None      None   \n",
       "4                             None                     None      None   \n",
       "\n",
       "               last_updated usd_price usd_volume_24h usd_volume_change_24h  \\\n",
       "0  2022-10-13T13:19:00.000Z      0.08        2527.84                -57.76   \n",
       "1  2022-10-13T13:19:00.000Z      1.05    16333836.08                941.26   \n",
       "2  2022-10-13T13:19:00.000Z      0.08         219.18                  0.73   \n",
       "3  2022-10-13T13:19:00.000Z      0.70      386735.84                 20.24   \n",
       "4  2022-10-13T13:19:00.000Z      0.35      109321.39                 60.80   \n",
       "\n",
       "  usd_percent_change_1h usd_percent_change_24h usd_percent_change_7d  \\\n",
       "0                 -2.08                 -10.21                -20.63   \n",
       "1                 -2.35                 -11.44                -33.23   \n",
       "2                 -0.08                  -2.06                 -7.28   \n",
       "3                 13.38                  -0.30                 -2.40   \n",
       "4                -21.37                  -1.40                -30.92   \n",
       "\n",
       "  usd_percent_change_30d usd_percent_change_60d usd_percent_change_90d  \\\n",
       "0                 -13.54                 -36.68                 -17.65   \n",
       "1                 -21.68                 -41.11                   0.56   \n",
       "2                 -43.63                 -32.98                 -56.26   \n",
       "3                 -38.73                  99.22                   4.87   \n",
       "4                 -45.63                 -59.08                 -59.08   \n",
       "\n",
       "  usd_marketcap usd_marketcap_dominance usd_full_diluted_marketcap usd_tvl  \\\n",
       "0             0                       0                 2462625.92    None   \n",
       "1             0                       0                          0    None   \n",
       "2             0                       0                 3554147.42    None   \n",
       "3             0                       0                 3523120.37    None   \n",
       "4             0                       0                15534428.67    None   \n",
       "\n",
       "           usd_last_updated token_per_day usd_per_day  \n",
       "0  2022-10-13T13:19:00.000Z          5.00        0.41  \n",
       "1  2022-10-13T13:19:00.000Z          7.50        7.88  \n",
       "2  2022-10-13T13:19:00.000Z          7.00        0.59  \n",
       "3  2022-10-13T13:19:00.000Z          8.50        5.99  \n",
       "4  2022-10-13T13:19:00.000Z         10.00        3.53  "
      ]
     },
     "execution_count": 89,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dfA"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 90,
   "id": "87012fd5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>symbol</th>\n",
       "      <th>floorPrice</th>\n",
       "      <th>listedCount</th>\n",
       "      <th>avgPrice24hr</th>\n",
       "      <th>volumeAll</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>turtles</td>\n",
       "      <td>8.20</td>\n",
       "      <td>97</td>\n",
       "      <td>NaN</td>\n",
       "      <td>94315.98</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>degods</td>\n",
       "      <td>270.00</td>\n",
       "      <td>265</td>\n",
       "      <td>292.45</td>\n",
       "      <td>1337503.06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>boryoku_dragonz</td>\n",
       "      <td>44.99</td>\n",
       "      <td>37</td>\n",
       "      <td>34.54</td>\n",
       "      <td>162434.72</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>taiyo_robotics</td>\n",
       "      <td>149.69</td>\n",
       "      <td>14</td>\n",
       "      <td>161.67</td>\n",
       "      <td>159375.06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>blocksmith_labs</td>\n",
       "      <td>96.00</td>\n",
       "      <td>54</td>\n",
       "      <td>101.45</td>\n",
       "      <td>343508.66</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            symbol floorPrice listedCount avgPrice24hr  volumeAll\n",
       "0          turtles       8.20          97          NaN   94315.98\n",
       "1           degods     270.00         265       292.45 1337503.06\n",
       "2  boryoku_dragonz      44.99          37        34.54  162434.72\n",
       "3   taiyo_robotics     149.69          14       161.67  159375.06\n",
       "4  blocksmith_labs      96.00          54       101.45  343508.66"
      ]
     },
     "execution_count": 90,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "# this let us see all columns\n",
    "\n",
    "pd.set_option('display.max_columns', None)\n",
    "pd.set_option('display.float_format', lambda x: '%.2f' % x)\n",
    "\n",
    "# Correct ME values\n",
    "\n",
    "dfAfp2 = dfAfp\n",
    "dfAfp2.floorPrice = dfAfp.floorPrice/1000000000\n",
    "dfAfp2.avgPrice24hr = dfAfp.avgPrice24hr/1000000000\n",
    "dfAfp2.volumeAll = dfAfp.volumeAll/1000000000\n",
    "dfAfp2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "id": "0a9e5970",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "28.355889242257845"
      ]
     },
     "execution_count": 91,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "# CALL SOL and grab its price\n",
    "\n",
    "url = 'https://pro-api.coinmarketcap.com/v1/cryptocurrency/quotes/latest'\n",
    "parameters = {\n",
    "  'convert':'USD',\n",
    "    'symbol':'SOL'\n",
    "}\n",
    "headers = {\n",
    "  'Accepts': 'application/json',\n",
    "  'X-CMC_PRO_API_KEY': '0fbe4952-0675-4f13-8274-fb02dbd99dbf',\n",
    "}\n",
    "\n",
    "session = Session()\n",
    "session.headers.update(headers)\n",
    "\n",
    "try:\n",
    "  response = session.get(url, params=parameters)\n",
    "  SOL = json.loads(response.text)\n",
    "  #print(SOL)\n",
    "except (ConnectionError, Timeout, TooManyRedirects) as e:\n",
    "  print(e)\n",
    "\n",
    "df0 = pd.json_normalize(SOL)\n",
    "df0['data.SOL.quote.USD.price']\n",
    "\n",
    "SOLPRICE = df0.iat[0,24]\n",
    "\n",
    "SOLPRICE\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "id": "94e22107",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>timestamp</th>\n",
       "      <th>error_code</th>\n",
       "      <th>error_message</th>\n",
       "      <th>elapsed</th>\n",
       "      <th>credit_count</th>\n",
       "      <th>notice</th>\n",
       "      <th>id</th>\n",
       "      <th>name</th>\n",
       "      <th>symbol</th>\n",
       "      <th>slug</th>\n",
       "      <th>num_market_pairs</th>\n",
       "      <th>date_added</th>\n",
       "      <th>tags</th>\n",
       "      <th>max_supply</th>\n",
       "      <th>circulating_supply</th>\n",
       "      <th>total_supply</th>\n",
       "      <th>id</th>\n",
       "      <th>name</th>\n",
       "      <th>symbol</th>\n",
       "      <th>platform_slug</th>\n",
       "      <th>platform_token_address</th>\n",
       "      <th>is_active</th>\n",
       "      <th>cmc_rank</th>\n",
       "      <th>is_fiat</th>\n",
       "      <th>self_reported_circulating_supply</th>\n",
       "      <th>self_reported_market_cap</th>\n",
       "      <th>tbl_ratio</th>\n",
       "      <th>last_updated</th>\n",
       "      <th>usd_price</th>\n",
       "      <th>usd_volume_24h</th>\n",
       "      <th>usd_volume_change_24h</th>\n",
       "      <th>usd_percent_change_1h</th>\n",
       "      <th>usd_percent_change_24h</th>\n",
       "      <th>usd_percent_change_7d</th>\n",
       "      <th>usd_percent_change_30d</th>\n",
       "      <th>usd_percent_change_60d</th>\n",
       "      <th>usd_percent_change_90d</th>\n",
       "      <th>usd_marketcap</th>\n",
       "      <th>usd_marketcap_dominance</th>\n",
       "      <th>usd_full_diluted_marketcap</th>\n",
       "      <th>usd_tvl</th>\n",
       "      <th>usd_last_updated</th>\n",
       "      <th>token_per_day</th>\n",
       "      <th>usd_per_day</th>\n",
       "      <th>Symbol</th>\n",
       "      <th>floorPrice</th>\n",
       "      <th>floorPriceUSD</th>\n",
       "      <th>ROI days</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2022-10-13T13:20:49.191Z</td>\n",
       "      <td>0</td>\n",
       "      <td>None</td>\n",
       "      <td>1972</td>\n",
       "      <td>1</td>\n",
       "      <td>None</td>\n",
       "      <td>15330</td>\n",
       "      <td>Turtles Token</td>\n",
       "      <td>TRTLS</td>\n",
       "      <td>turtles-token</td>\n",
       "      <td>3</td>\n",
       "      <td>2021-11-30T03:49:23.000Z</td>\n",
       "      <td>[collectibles-nfts, gaming, solana-ecosystem]</td>\n",
       "      <td>30000000</td>\n",
       "      <td>0</td>\n",
       "      <td>30000000</td>\n",
       "      <td>5426</td>\n",
       "      <td>Solana</td>\n",
       "      <td>SOL</td>\n",
       "      <td>solana</td>\n",
       "      <td>q4bpaRKw3fJB1AJBeeBaKv3TjYzWsmntLgnSB275YUb</td>\n",
       "      <td>1</td>\n",
       "      <td>5609</td>\n",
       "      <td>0</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "      <td>2022-10-13T13:19:00.000Z</td>\n",
       "      <td>0.08</td>\n",
       "      <td>2527.84</td>\n",
       "      <td>-57.76</td>\n",
       "      <td>-2.08</td>\n",
       "      <td>-10.21</td>\n",
       "      <td>-20.63</td>\n",
       "      <td>-13.54</td>\n",
       "      <td>-36.68</td>\n",
       "      <td>-17.65</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2462625.92</td>\n",
       "      <td>None</td>\n",
       "      <td>2022-10-13T13:19:00.000Z</td>\n",
       "      <td>5.00</td>\n",
       "      <td>0.41</td>\n",
       "      <td>turtles</td>\n",
       "      <td>8.20</td>\n",
       "      <td>232.52</td>\n",
       "      <td>566.51</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2022-10-13T13:20:49.808Z</td>\n",
       "      <td>0</td>\n",
       "      <td>None</td>\n",
       "      <td>36</td>\n",
       "      <td>1</td>\n",
       "      <td>None</td>\n",
       "      <td>18802</td>\n",
       "      <td>DUST Protocol</td>\n",
       "      <td>DUST</td>\n",
       "      <td>dust-protocol</td>\n",
       "      <td>12</td>\n",
       "      <td>2022-03-14T13:00:32.000Z</td>\n",
       "      <td>[solana-ecosystem]</td>\n",
       "      <td>None</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>5426</td>\n",
       "      <td>Solana</td>\n",
       "      <td>SOL</td>\n",
       "      <td>solana</td>\n",
       "      <td>DUSTawucrTsGU8hcqRdHDCbuYhCPADMLM2VcCb8VnFnQ</td>\n",
       "      <td>1</td>\n",
       "      <td>2661</td>\n",
       "      <td>0</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "      <td>2022-10-13T13:19:00.000Z</td>\n",
       "      <td>1.05</td>\n",
       "      <td>16333836.08</td>\n",
       "      <td>941.26</td>\n",
       "      <td>-2.35</td>\n",
       "      <td>-11.44</td>\n",
       "      <td>-33.23</td>\n",
       "      <td>-21.68</td>\n",
       "      <td>-41.11</td>\n",
       "      <td>0.56</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>None</td>\n",
       "      <td>2022-10-13T13:19:00.000Z</td>\n",
       "      <td>7.50</td>\n",
       "      <td>7.88</td>\n",
       "      <td>degods</td>\n",
       "      <td>270.00</td>\n",
       "      <td>7656.09</td>\n",
       "      <td>972.16</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2022-10-13T13:20:50.154Z</td>\n",
       "      <td>0</td>\n",
       "      <td>None</td>\n",
       "      <td>44</td>\n",
       "      <td>1</td>\n",
       "      <td>None</td>\n",
       "      <td>15097</td>\n",
       "      <td>Boryoku Dragonz</td>\n",
       "      <td>BOKU</td>\n",
       "      <td>boku</td>\n",
       "      <td>1</td>\n",
       "      <td>2021-11-24T04:34:29.000Z</td>\n",
       "      <td>[]</td>\n",
       "      <td>42069069</td>\n",
       "      <td>0</td>\n",
       "      <td>42069069</td>\n",
       "      <td>5426</td>\n",
       "      <td>Solana</td>\n",
       "      <td>SOL</td>\n",
       "      <td>solana</td>\n",
       "      <td>CN7qFa5iYkHz99PTctvT4xXUHnxwjQ5MHxCuTJtPN5uS</td>\n",
       "      <td>1</td>\n",
       "      <td>6671</td>\n",
       "      <td>0</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "      <td>2022-10-13T13:19:00.000Z</td>\n",
       "      <td>0.08</td>\n",
       "      <td>219.18</td>\n",
       "      <td>0.73</td>\n",
       "      <td>-0.08</td>\n",
       "      <td>-2.06</td>\n",
       "      <td>-7.28</td>\n",
       "      <td>-43.63</td>\n",
       "      <td>-32.98</td>\n",
       "      <td>-56.26</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3554147.42</td>\n",
       "      <td>None</td>\n",
       "      <td>2022-10-13T13:19:00.000Z</td>\n",
       "      <td>7.00</td>\n",
       "      <td>0.59</td>\n",
       "      <td>boryoku_dragonz</td>\n",
       "      <td>44.99</td>\n",
       "      <td>1275.73</td>\n",
       "      <td>2157.19</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2022-10-13T13:20:50.494Z</td>\n",
       "      <td>0</td>\n",
       "      <td>None</td>\n",
       "      <td>41</td>\n",
       "      <td>1</td>\n",
       "      <td>None</td>\n",
       "      <td>17656</td>\n",
       "      <td>Scrap</td>\n",
       "      <td>SCRAP</td>\n",
       "      <td>scrap</td>\n",
       "      <td>4</td>\n",
       "      <td>2022-01-26T09:21:40.000Z</td>\n",
       "      <td>[solana-ecosystem]</td>\n",
       "      <td>None</td>\n",
       "      <td>0</td>\n",
       "      <td>5000000</td>\n",
       "      <td>5426</td>\n",
       "      <td>Solana</td>\n",
       "      <td>SOL</td>\n",
       "      <td>solana</td>\n",
       "      <td>6naWDMGNWwqffJnnXFLBCLaYu1y5U9Rohe5wwJPHvf1p</td>\n",
       "      <td>1</td>\n",
       "      <td>3095</td>\n",
       "      <td>0</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "      <td>2022-10-13T13:19:00.000Z</td>\n",
       "      <td>0.70</td>\n",
       "      <td>386735.84</td>\n",
       "      <td>20.24</td>\n",
       "      <td>13.38</td>\n",
       "      <td>-0.30</td>\n",
       "      <td>-2.40</td>\n",
       "      <td>-38.73</td>\n",
       "      <td>99.22</td>\n",
       "      <td>4.87</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3523120.37</td>\n",
       "      <td>None</td>\n",
       "      <td>2022-10-13T13:19:00.000Z</td>\n",
       "      <td>8.50</td>\n",
       "      <td>5.99</td>\n",
       "      <td>taiyo_robotics</td>\n",
       "      <td>149.69</td>\n",
       "      <td>4244.59</td>\n",
       "      <td>708.70</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2022-10-13T13:20:50.915Z</td>\n",
       "      <td>0</td>\n",
       "      <td>None</td>\n",
       "      <td>61</td>\n",
       "      <td>1</td>\n",
       "      <td>None</td>\n",
       "      <td>19976</td>\n",
       "      <td>Blocksmith Labs Forge</td>\n",
       "      <td>$FORGE</td>\n",
       "      <td>blocksmith-labs-forge</td>\n",
       "      <td>4</td>\n",
       "      <td>2022-05-05T09:27:06.000Z</td>\n",
       "      <td>[solana-ecosystem]</td>\n",
       "      <td>44000000</td>\n",
       "      <td>0</td>\n",
       "      <td>9999992.16</td>\n",
       "      <td>5426</td>\n",
       "      <td>Solana</td>\n",
       "      <td>SOL</td>\n",
       "      <td>solana</td>\n",
       "      <td>FoRGERiW7odcCBGU1bztZi16osPBHjxharvDathL5eds</td>\n",
       "      <td>1</td>\n",
       "      <td>3639</td>\n",
       "      <td>0</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "      <td>2022-10-13T13:19:00.000Z</td>\n",
       "      <td>0.35</td>\n",
       "      <td>109321.39</td>\n",
       "      <td>60.80</td>\n",
       "      <td>-21.37</td>\n",
       "      <td>-1.40</td>\n",
       "      <td>-30.92</td>\n",
       "      <td>-45.63</td>\n",
       "      <td>-59.08</td>\n",
       "      <td>-59.08</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>15534428.67</td>\n",
       "      <td>None</td>\n",
       "      <td>2022-10-13T13:19:00.000Z</td>\n",
       "      <td>10.00</td>\n",
       "      <td>3.53</td>\n",
       "      <td>blocksmith_labs</td>\n",
       "      <td>96.00</td>\n",
       "      <td>2722.17</td>\n",
       "      <td>771.03</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                  timestamp error_code error_message elapsed credit_count  \\\n",
       "0  2022-10-13T13:20:49.191Z          0          None    1972            1   \n",
       "1  2022-10-13T13:20:49.808Z          0          None      36            1   \n",
       "2  2022-10-13T13:20:50.154Z          0          None      44            1   \n",
       "3  2022-10-13T13:20:50.494Z          0          None      41            1   \n",
       "4  2022-10-13T13:20:50.915Z          0          None      61            1   \n",
       "\n",
       "  notice     id                   name  symbol                   slug  \\\n",
       "0   None  15330          Turtles Token   TRTLS          turtles-token   \n",
       "1   None  18802          DUST Protocol    DUST          dust-protocol   \n",
       "2   None  15097        Boryoku Dragonz    BOKU                   boku   \n",
       "3   None  17656                  Scrap   SCRAP                  scrap   \n",
       "4   None  19976  Blocksmith Labs Forge  $FORGE  blocksmith-labs-forge   \n",
       "\n",
       "  num_market_pairs                date_added  \\\n",
       "0                3  2021-11-30T03:49:23.000Z   \n",
       "1               12  2022-03-14T13:00:32.000Z   \n",
       "2                1  2021-11-24T04:34:29.000Z   \n",
       "3                4  2022-01-26T09:21:40.000Z   \n",
       "4                4  2022-05-05T09:27:06.000Z   \n",
       "\n",
       "                                            tags max_supply  \\\n",
       "0  [collectibles-nfts, gaming, solana-ecosystem]   30000000   \n",
       "1                             [solana-ecosystem]       None   \n",
       "2                                             []   42069069   \n",
       "3                             [solana-ecosystem]       None   \n",
       "4                             [solana-ecosystem]   44000000   \n",
       "\n",
       "  circulating_supply total_supply    id    name symbol platform_slug  \\\n",
       "0                  0     30000000  5426  Solana    SOL        solana   \n",
       "1                  0            0  5426  Solana    SOL        solana   \n",
       "2                  0     42069069  5426  Solana    SOL        solana   \n",
       "3                  0      5000000  5426  Solana    SOL        solana   \n",
       "4                  0   9999992.16  5426  Solana    SOL        solana   \n",
       "\n",
       "                         platform_token_address is_active cmc_rank is_fiat  \\\n",
       "0   q4bpaRKw3fJB1AJBeeBaKv3TjYzWsmntLgnSB275YUb         1     5609       0   \n",
       "1  DUSTawucrTsGU8hcqRdHDCbuYhCPADMLM2VcCb8VnFnQ         1     2661       0   \n",
       "2  CN7qFa5iYkHz99PTctvT4xXUHnxwjQ5MHxCuTJtPN5uS         1     6671       0   \n",
       "3  6naWDMGNWwqffJnnXFLBCLaYu1y5U9Rohe5wwJPHvf1p         1     3095       0   \n",
       "4  FoRGERiW7odcCBGU1bztZi16osPBHjxharvDathL5eds         1     3639       0   \n",
       "\n",
       "  self_reported_circulating_supply self_reported_market_cap tbl_ratio  \\\n",
       "0                             None                     None      None   \n",
       "1                             None                     None      None   \n",
       "2                             None                     None      None   \n",
       "3                             None                     None      None   \n",
       "4                             None                     None      None   \n",
       "\n",
       "               last_updated usd_price usd_volume_24h usd_volume_change_24h  \\\n",
       "0  2022-10-13T13:19:00.000Z      0.08        2527.84                -57.76   \n",
       "1  2022-10-13T13:19:00.000Z      1.05    16333836.08                941.26   \n",
       "2  2022-10-13T13:19:00.000Z      0.08         219.18                  0.73   \n",
       "3  2022-10-13T13:19:00.000Z      0.70      386735.84                 20.24   \n",
       "4  2022-10-13T13:19:00.000Z      0.35      109321.39                 60.80   \n",
       "\n",
       "  usd_percent_change_1h usd_percent_change_24h usd_percent_change_7d  \\\n",
       "0                 -2.08                 -10.21                -20.63   \n",
       "1                 -2.35                 -11.44                -33.23   \n",
       "2                 -0.08                  -2.06                 -7.28   \n",
       "3                 13.38                  -0.30                 -2.40   \n",
       "4                -21.37                  -1.40                -30.92   \n",
       "\n",
       "  usd_percent_change_30d usd_percent_change_60d usd_percent_change_90d  \\\n",
       "0                 -13.54                 -36.68                 -17.65   \n",
       "1                 -21.68                 -41.11                   0.56   \n",
       "2                 -43.63                 -32.98                 -56.26   \n",
       "3                 -38.73                  99.22                   4.87   \n",
       "4                 -45.63                 -59.08                 -59.08   \n",
       "\n",
       "  usd_marketcap usd_marketcap_dominance usd_full_diluted_marketcap usd_tvl  \\\n",
       "0             0                       0                 2462625.92    None   \n",
       "1             0                       0                          0    None   \n",
       "2             0                       0                 3554147.42    None   \n",
       "3             0                       0                 3523120.37    None   \n",
       "4             0                       0                15534428.67    None   \n",
       "\n",
       "           usd_last_updated token_per_day usd_per_day           Symbol  \\\n",
       "0  2022-10-13T13:19:00.000Z          5.00        0.41          turtles   \n",
       "1  2022-10-13T13:19:00.000Z          7.50        7.88           degods   \n",
       "2  2022-10-13T13:19:00.000Z          7.00        0.59  boryoku_dragonz   \n",
       "3  2022-10-13T13:19:00.000Z          8.50        5.99   taiyo_robotics   \n",
       "4  2022-10-13T13:19:00.000Z         10.00        3.53  blocksmith_labs   \n",
       "\n",
       "  floorPrice floorPriceUSD ROI days  \n",
       "0       8.20        232.52   566.51  \n",
       "1     270.00       7656.09   972.16  \n",
       "2      44.99       1275.73  2157.19  \n",
       "3     149.69       4244.59   708.70  \n",
       "4      96.00       2722.17   771.03  "
      ]
     },
     "execution_count": 92,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#CONCAT BOTH TOKENS PRICE AND FLOOR PRICE\n",
    "\n",
    "dfTABLE = dfA\n",
    "dfTABLE['Symbol'] = dfAfp.symbol\n",
    "dfTABLE['floorPrice'] = dfAfp.floorPrice\n",
    "dfTABLE['floorPriceUSD'] = dfAfp[\"floorPrice\"]*SOLPRICE\n",
    "dfTABLE['ROI days']=dfTABLE['floorPriceUSD']/dfTABLE['usd_per_day']\n",
    "\n",
    "\n",
    "dfTABLE\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "id": "9f7789c3",
   "metadata": {},
   "outputs": [],
   "source": [
    "import os   \n",
    "\n",
    "if not os.path.isfile(r'C:\\Users\\kkanoee\\Documents\\Python Scripts\\SOLTOKENS.csv'):\n",
    "    dfA.to_csv(r'C:\\Users\\kkanoee\\Documents\\Python Scripts\\SOLTOKENS.csv', header='column_names')\n",
    "else: dfA.to_csv(r'C:\\Users\\kkanoee\\Documents\\Python Scripts\\SOLTOKENS.csv', mode='a', header=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "id": "21b10a43",
   "metadata": {},
   "outputs": [],
   "source": [
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "id": "8bf9e66b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<seaborn.axisgrid.FacetGrid at 0x1d7ae4d6ee0>"
      ]
     },
     "execution_count": 95,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 481.625x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "splot = sns.catplot(x='ROI days',\n",
    "                    y='floorPrice',\n",
    "                    hue='Symbol',\n",
    "                    data=dfTABLE.round(),\n",
    "                    kind='point',\n",
    "                    fit_reg=False,\n",
    "                    aspect=1)\n",
    "\n",
    "splot\n",
    "#splot.set(xscale=\"log\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 96,
   "id": "cc78d2b3",
   "metadata": {},
   "outputs": [],
   "source": [
    "import os   \n",
    "\n",
    "if not os.path.isfile(r'C:\\Users\\kkanoee\\Documents\\Python Scripts\\SOLTOKENS.xlsx'):\n",
    "    dfA.to_excel(r'C:\\Users\\kkanoee\\Documents\\Python Scripts\\SOLTOKENS.xlsx', header='column_names')\n",
    "else: dfA.to_excel(r'C:\\Users\\kkanoee\\Documents\\Python Scripts\\SOLTOKENS.xslx', mode='a', header=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c0a0a472",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "78dac41c",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
